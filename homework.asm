data_seg segment
    ;A DW 08000H, 0EA92H, 00DABH, 0E5D0H, 0ADBAH, 043C8H, 01B67H, 0422EH, 040D7H, 05F6AH, 0D963H, 0546EH, 0554CH, 0C2F7H, 02648H, 0C405H, 0685CH, 0DCDCH, 02711H, 02F3CH, 0FC81H, 07D9AH, 0EF91H, 0C876H, 022FAH, 0620FH, 01798H, 02EAFH, 0BCC4H, 06454H, 0D943H, 0E4C8H, 0086FH, 07E1EH, 0FF0EH, 01826H, 06479H, 00F28H, 0E7BEH, 0C4F3H, 0DDEDH, 01B55H, 02E38H, 0986EH, 0200AH, 06024H, 03C1AH, 0C061H, 0A54BH, 07709H
    ;A DW 062A7H, 07D5BH, 04B3EH, 03DF4H, 093F0H, 0B05CH, 023DFH, 0D0F6H, 06692H, 0629AH, 0D1FFH, 09CB9H, 0D7AEH, 08BA5H, 02B15H, 0F2A3H, 04697H, 0A4EDH, 0243AH, 01321H, 02148H, 0FCD8H, 07316H, 09E11H, 0D13FH, 00530H, 0C099H, 0D743H, 05E77H, 0EFE9H, 0E2CFH, 068AEH, 0BF10H, 05CABH, 0600EH, 004E8H, 0A957H, 0FEA1H, 0FC9FH, 00A2CH, 037C7H, 087F3H, 015D0H, 081EFH, 0B38EH, 02CD3H, 084C4H, 04199H, 0F2FEH, 0E549H
    ;A DW 06AD0H, 0E338H, 04CD4H, 0BDB0H, 07514H, 0211BH, 017E1H, 058EAH, 0D575H, 035CCH, 0E0ACH, 00572H, 04326H, 0F410H, 04E53H, 0FEE9H, 0D020H, 0037DH, 07374H, 0EBC5H, 0382BH, 099C5H, 0AC7AH, 04A9DH, 07D55H, 02672H, 0388DH, 032A5H, 00991H, 0DE6BH, 0C88FH, 0238BH, 03B9EH, 03373H, 04CCAH, 0490BH, 0A2BEH, 067A7H, 08BD2H, 0FB0EH, 07915H, 0CAC5H, 01799H, 0721EH, 00B9BH, 0A91CH, 0BD31H, 0C97BH, 0AE29H, 0F9C8H
    A DW 04B91H, 0DF00H, 0E4DFH, 03BEFH, 0D699H, 0F26DH, 058C8H, 014ADH, 0AB5EH, 05E73H, 09395H, 0D1D0H, 094A7H, 09567H, 02BD2H, 0D0D4H, 0D1BCH, 05E71H, 0CC72H, 0B57DH, 0AD9BH, 0DFA8H, 0DBC7H, 0E72EH, 0D0A7H, 01A36H, 06636H, 06398H, 0148EH, 07D77H, 070EFH, 00558H, 00F35H, 0C7B5H, 0B915H, 0D133H, 0D8CDH, 04D21H, 07E3EH, 0FC2BH, 08AD7H, 071E0H, 026A4H, 0FEA9H, 0B587H, 006B5H, 0052EH, 0622EH, 01C1EH, 0F404H
    ;A DW 084F2H, 071D6H, 0FBEAH, 01870H, 04BB5H, 0E9F7H, 0B097H, 09C54H, 09424H, 040AEH, 00E84H, 0DDE5H, 03764H, 00106H, 0C09EH, 0179DH, 0DF7BH, 032B0H, 074E3H, 0CBF0H, 0791DH, 06CB3H, 0EB16H, 04D7AH, 05C1CH, 09F98H, 056DDH, 08CC7H, 0F0B7H, 052ABH, 0204FH, 017F7H, 0EDD9H, 0AD38H, 089B6H, 02252H, 07DDBH, 02303H, 068E7H, 0ECA9H, 05ADDH, 0682DH, 0ED3DH, 01D8AH, 0991FH, 0E1C7H, 02BD9H, 0B4F4H, 0CE51H, 0F47DH
    ;A DW 0818BH, 08292H, 085BDH, 0941DH, 0965CH, 09FF9H, 0A054H, 0A15DH, 0A835H, 0ABC1H, 0ABC9H, 0ADDCH, 0B346H, 0B3C8H, 0BB05H, 0BF03H, 0C1EAH, 0C66FH, 0C7BFH, 0CACBH, 0CB15H, 0CDBFH, 0D085H, 0D4DFH, 0DA58H, 0DA9AH, 0E0C0H, 0E3A7H, 0E718H, 0EBD8H, 0F23AH, 00420H, 0139BH, 01585H, 01AD7H, 01D3AH, 01E08H, 02E2AH, 0349AH, 035B4H, 03E85H, 040BAH, 04652H, 058C0H, 05F62H, 06123H, 06402H, 06DFAH, 06F1CH, 07A6BH  
    ;A DW 077C8H, 07599H, 06C4AH, 06B87H, 061F4H, 059BCH, 056C2H, 05406H, 04D21H, 04B9EH, 049B3H, 04232H, 04130H, 03E84H, 03CC9H, 03AB4H, 037CAH, 03596H, 02FD3H, 02F21H, 02C68H, 021D3H, 01778H, 0132FH, 00653H, 0023EH, 0FF26H, 0FF14H, 0FAF4H, 0F938H, 0F8D8H, 0F747H, 0E985H, 0E865H, 0D4DEH, 0D2C7H, 0C257H, 0C013H, 0BE95H, 0B079H, 0A832H, 0A788H, 0A700H, 0A47BH, 09A48H, 09706H, 09609H, 08FCFH, 0868FH, 080BEH
data_seg ends 

stack_seg segment
    ST DW 100 DUP(0)
    TOP EQU 200
stack_seg ends

code_seg segment
    assume cs:code_seg, ds:data_seg, ss:stack_seg
start:
    MOV AX, stack_seg
    MOV SS, AX
    MOV SP, TOP
    MOV AX, data_seg
    MOV DS, AX
    MOV AX, 0D
    MOV BX, 98D
    
    CALL quicksort
    
    MOV AX, 4C00H
    INT 21H
    
quicksort proc near
    PUSH AX
    PUSH BX
    PUSH SI
    
    MOV SI, SP
    MOV DX, BX
    SUB DX, AX
    JZ LABEL7
    JS LABEL7
    LABEL2:
    XCHG AX, BX
    MOV DX, [BX]
    XCHG AX, BX
    CMP DX, [BX]
    JG LABEL1
    SUB BX, 2D
    CMP AX, BX
    JE LABEL5
    JG LABEL7
    JMP LABEL2
    LABEL1:
    MOV DX, [BX]
    XCHG AX, BX
    XCHG DX, [BX]
    XCHG AX, BX
    MOV [BX], DX
    LABEL4:
    XCHG AX, BX
    MOV DX, [BX]
    XCHG AX, BX
    CMP DX, [BX]
    JG LABEL3
    ADD AX, 2D
    CMP AX, BX
    JE LABEL5
    JG LABEL7
    JMP LABEL4
    LABEL3:
    MOV DX, [BX]
    XCHG AX, BX
    XCHG DX, [BX]
    XCHG AX, BX
    MOV [BX], DX
    JMP LABEL2
    LABEL5:
    PUSH AX
    MOV SI, SP
    MOV AX, SS:[SI+6]
    SUB BX, 2
    MOV DX, BX
    SUB DX, AX
    JZ LABEL6
    JS LABEL6
    CALL quicksort
    LABEL6:
    POP AX
    ADD AX, 2
    MOV SI, SP
    MOV BX, SS:[SI+2]
    MOV DX, BX
    SUB DX, AX
    JZ LABEL7
    JS LABEL7
    CALL quicksort
    LABEL7:     
     
    POP SI
    POP BX
    POP AX
    RET
quicksort endp
code_seg ends
end start